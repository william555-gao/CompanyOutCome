<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.example.springbootdemo.mapper.CompanyLoginDOMapper">
    <resultMap id="BaseResultMap" type="com.company.example.springbootdemo.entity.CompanyLoginDO">
        <id column="login_user_id" jdbcType="INTEGER" property="loginUserId"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_status" jdbcType="VARCHAR" property="userStatus"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    login_user_id, user_email, user_phone, user_password, user_type, user_id, user_status
  </sql>
    <select id="selectByExample" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDOExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from company_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from company_login
        where login_user_id = #{loginUserId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company_login
    where login_user_id = #{loginUserId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDOExample">
        delete from company_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDO">
    insert into company_login (login_user_id, user_email, user_phone, 
      user_password, user_type, user_id, 
      user_status)
    values (#{loginUserId,jdbcType=INTEGER}, #{userEmail,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDO">
        insert into company_login
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginUserId != null">
                login_user_id,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginUserId != null">
                #{loginUserId,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDOExample"
            resultType="java.lang.Long">
        select count(*) from company_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update company_login
        <set>
            <if test="record.loginUserId != null">
                login_user_id = #{record.loginUserId,jdbcType=INTEGER},
            </if>
            <if test="record.userEmail != null">
                user_email = #{record.userEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.userPhone != null">
                user_phone = #{record.userPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userType != null">
                user_type = #{record.userType,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userStatus != null">
                user_status = #{record.userStatus,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update company_login
        set login_user_id = #{record.loginUserId,jdbcType=INTEGER},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_type = #{record.userType,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        user_status = #{record.userStatus,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDO">
        update company_login
        <set>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=VARCHAR},
            </if>
        </set>
        where login_user_id = #{loginUserId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.company.example.springbootdemo.entity.CompanyLoginDO">
    update company_login
    set user_email = #{userEmail,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=VARCHAR}
    where login_user_id = #{loginUserId,jdbcType=INTEGER}
  </update>
</mapper>