<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.example.springbootdemo.mapper.OutcomeInformationDOMapper">
    <resultMap id="BaseResultMap" type="com.company.example.springbootdemo.entity.OutcomeInformationDO">
        <id column="outcome_id" jdbcType="INTEGER" property="outcomeId"/>
        <result column="outcome_name" jdbcType="VARCHAR" property="outcomeName"/>
        <result column="belong_domain" jdbcType="VARCHAR" property="belongDomain"/>
        <result column="cooperation_type" jdbcType="VARCHAR" property="cooperationType"/>
        <result column="transaction_price" jdbcType="VARCHAR" property="transactionPrice"/>
        <result column="use_type" jdbcType="VARCHAR" property="useType"/>
        <result column="maturity" jdbcType="VARCHAR" property="maturity"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    outcome_id, outcome_name, belong_domain, cooperation_type, transaction_price, use_type, 
    maturity, company_name
  </sql>
    <select id="selectByExample" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDOExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from outcome_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from outcome_information
        where outcome_id = #{outcomeId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from outcome_information
    where outcome_id = #{outcomeId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDOExample">
        delete from outcome_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDO">
    insert into outcome_information (outcome_id, outcome_name, belong_domain, 
      cooperation_type, transaction_price, use_type, 
      maturity, company_name)
    values (#{outcomeId,jdbcType=INTEGER}, #{outcomeName,jdbcType=VARCHAR}, #{belongDomain,jdbcType=VARCHAR}, 
      #{cooperationType,jdbcType=VARCHAR}, #{transactionPrice,jdbcType=VARCHAR}, #{useType,jdbcType=VARCHAR}, 
      #{maturity,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDO">
        insert into outcome_information
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outcomeId != null">
                outcome_id,
            </if>
            <if test="outcomeName != null">
                outcome_name,
            </if>
            <if test="belongDomain != null">
                belong_domain,
            </if>
            <if test="cooperationType != null">
                cooperation_type,
            </if>
            <if test="transactionPrice != null">
                transaction_price,
            </if>
            <if test="useType != null">
                use_type,
            </if>
            <if test="maturity != null">
                maturity,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outcomeId != null">
                #{outcomeId,jdbcType=INTEGER},
            </if>
            <if test="outcomeName != null">
                #{outcomeName,jdbcType=VARCHAR},
            </if>
            <if test="belongDomain != null">
                #{belongDomain,jdbcType=VARCHAR},
            </if>
            <if test="cooperationType != null">
                #{cooperationType,jdbcType=VARCHAR},
            </if>
            <if test="transactionPrice != null">
                #{transactionPrice,jdbcType=VARCHAR},
            </if>
            <if test="useType != null">
                #{useType,jdbcType=VARCHAR},
            </if>
            <if test="maturity != null">
                #{maturity,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDOExample"
            resultType="java.lang.Long">
        select count(*) from outcome_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update outcome_information
        <set>
            <if test="record.outcomeId != null">
                outcome_id = #{record.outcomeId,jdbcType=INTEGER},
            </if>
            <if test="record.outcomeName != null">
                outcome_name = #{record.outcomeName,jdbcType=VARCHAR},
            </if>
            <if test="record.belongDomain != null">
                belong_domain = #{record.belongDomain,jdbcType=VARCHAR},
            </if>
            <if test="record.cooperationType != null">
                cooperation_type = #{record.cooperationType,jdbcType=VARCHAR},
            </if>
            <if test="record.transactionPrice != null">
                transaction_price = #{record.transactionPrice,jdbcType=VARCHAR},
            </if>
            <if test="record.useType != null">
                use_type = #{record.useType,jdbcType=VARCHAR},
            </if>
            <if test="record.maturity != null">
                maturity = #{record.maturity,jdbcType=VARCHAR},
            </if>
            <if test="record.companyName != null">
                company_name = #{record.companyName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update outcome_information
        set outcome_id = #{record.outcomeId,jdbcType=INTEGER},
        outcome_name = #{record.outcomeName,jdbcType=VARCHAR},
        belong_domain = #{record.belongDomain,jdbcType=VARCHAR},
        cooperation_type = #{record.cooperationType,jdbcType=VARCHAR},
        transaction_price = #{record.transactionPrice,jdbcType=VARCHAR},
        use_type = #{record.useType,jdbcType=VARCHAR},
        maturity = #{record.maturity,jdbcType=VARCHAR},
        company_name = #{record.companyName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDO">
        update outcome_information
        <set>
            <if test="outcomeName != null">
                outcome_name = #{outcomeName,jdbcType=VARCHAR},
            </if>
            <if test="belongDomain != null">
                belong_domain = #{belongDomain,jdbcType=VARCHAR},
            </if>
            <if test="cooperationType != null">
                cooperation_type = #{cooperationType,jdbcType=VARCHAR},
            </if>
            <if test="transactionPrice != null">
                transaction_price = #{transactionPrice,jdbcType=VARCHAR},
            </if>
            <if test="useType != null">
                use_type = #{useType,jdbcType=VARCHAR},
            </if>
            <if test="maturity != null">
                maturity = #{maturity,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
        </set>
        where outcome_id = #{outcomeId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.company.example.springbootdemo.entity.OutcomeInformationDO">
    update outcome_information
    set outcome_name = #{outcomeName,jdbcType=VARCHAR},
      belong_domain = #{belongDomain,jdbcType=VARCHAR},
      cooperation_type = #{cooperationType,jdbcType=VARCHAR},
      transaction_price = #{transactionPrice,jdbcType=VARCHAR},
      use_type = #{useType,jdbcType=VARCHAR},
      maturity = #{maturity,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR}
    where outcome_id = #{outcomeId,jdbcType=INTEGER}
  </update>
</mapper>